name: hello-world
on: 
  push:
    branches: [main]
jobs:
  say-hello:
    runs-on: ubuntu-latest
    steps:
      - run: echo "TODAY=$(date +%y-%m-%d)" >> $GITHUB_ENV  
      - run: echo Hello World, today is $TODAY
  #Job 1: SonarQube Scan
  sonarqube:
    name: SonarQube Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17 for SonarQube
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      - name: Run SonarScanner
        run: |
          sonar-scanner \
          -Dsonar.projectKey=ConKhiPecPeC_myLab \
          -Dsonar.organization=ConKhiPecPeC \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  #Job 2: Build and Push container
  build:
    needs: sonarqube
    runs-on: ubuntu-latest
    steps:
      # Bước 1: Checkout mã nguồn từ repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Bước 2: Thiết lập Docker registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Bước 3: Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest .

      # Bước 4: Push Docker image lên Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
# Job 3: Deploy
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            sudo chmod 777 /var/run/docker.sock
            sudo systemctl start docker
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
            
            docker stop my-node-app || true
            docker rm my-node-app || true
            
            docker run -d --name my-node-app -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest

